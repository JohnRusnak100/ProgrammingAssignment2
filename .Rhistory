library(KernSmooth)
library(KernSmooth)
license()
demo()
glm.vr
help()
help(demo)
demo(lm.glm,package="stats",ask=TRUE)
quit()
f(3)
x=function(id){}
x
x=function(id){}
x=function(id){}
mean(iris[ ,'virginica'])
source('~/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(1:4,2,2))
x
x[1]
setwd("~/ProgrammingAssignment2")
source('~/ProgrammingAssignment2/cachematrix.R')
v<-makeCacheMatrix(matrix(1:4,2,2))
v$get()
v$getinverse
v$getinverse()
cacheSolve(v)
v$getinverse()
cacheSolve(v)
x<-cacheSolve(v)
x
v$get()%*%cacheSolve(v)
source('~/ProgrammingAssignment2/cachematrix.R')
v<-makeCacheMatrix(matrix(5:8,2,2))
v$get()
v$getinverse()
cacheSolve(v)
v$getinverse()
v$get()%*%cacheSolve(v)
View(x)
v$get()%*%cacheSolve(v)
v$get() %*% cacheSolve(v)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
v<-makeCacheMatrix(matrix(4:1,2,2))
v$get()
v$getinverse()
cacheSolve(v)
cacheSolve(v)
v$get() %*% cacheSolve(v)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
